// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// location
model Distrito {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  provinciaId Int
  provincia   Provincia @relation(fields: [provinciaId], references: [id])
  buyers      Buyer[]

  @@map("distritos")
}

model Provincia {
  id            Int         @id @default(autoincrement())
  name          String      @unique
  departmentoId Int
  departmento   Departmento @relation(fields: [departmentoId], references: [id])
  distritos     Distrito[]
  buyers        Buyer[]

  @@map("provincias")
}

model Departmento {
  id         Int         @id @default(autoincrement())
  name       String      @unique
  provincias Provincia[]
  buyers     Buyer[]

  @@map("departamentos")
}

// chat messages
model Chat {
  id               Int               @id @default(autoincrement())
  createdAt        DateTime
  chatMessage      ChatMessage[]
  chatParticipants ChatParticipant[]

  @@map("chats")
}

model Message {
  id                 Int                 @id @default(autoincrement())
  text               String
  createdAt          DateTime
  updatedAt          DateTime
  status             Int
  accountId          Int
  account            Account             @relation(fields: [accountId], references: [id])
  messageAttachments MessageAttachment[]
  chatMessages       ChatMessage[]

  @@map("messages")
}

model Notification {
  id                Int                @id @default(autoincrement())
  title             String
  description       String
  createdAt         DateTime
  updatedAt         DateTime
  imageUrl          String
  userNotifications UserNotification[]

  @@map("notificactions")
}

model Country {
  id           Int           @id @default(autoincrement())
  name         String
  code         String
  brandSellers BrandSeller[]

  @@map("countries")
}

model Account {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  role     String    @default("user")
  password String
  phone    String?
  name     String
  buyer    Buyer?
  markets  Market[]
  messages Message[]

  @@map("accounts")
}

model Market {
  id             Int             @id @default(autoincrement())
  name           String
  contactEmail   String
  contactPhone   String
  accountId      Int
  account        Account         @relation(fields: [accountId], references: [id])
  marketProducts MarketProduct[]

  @@map("markets")
}

model Buyer {
  id               Int          @id @default(autoincrement())
  referenceAddress String?
  distritoId       Int?
  provinciaId      Int?
  departamentoId   Int?
  accountId        Int          @unique
  distrito         Distrito?    @relation(fields: [distritoId], references: [id])
  provincia        Provincia?   @relation(fields: [provinciaId], references: [id])
  departmento      Departmento? @relation(fields: [departamentoId], references: [id])
  account          Account      @relation(fields: [accountId], references: [id])

  shoppingCarts     ShoppingCart[]
  wishlists         Wishlist[]
  orders            Order[]
  productRatings    ProductRating[]
  productQuestions  ProductQuestion[]
  userNotifications UserNotification[]
  chatParticipants  ChatParticipant[]

  @@map("buyers")
}

model ShoppingCart {
  id        Int        @id @default(autoincrement())
  userId    Int
  buyer     Buyer      @relation(fields: [userId], references: [id])
  CartItems CartItem[]

  @@map("shopping_carts")
}

model Wishlist {
  id            Int            @id @default(autoincrement())
  userId        Int
  buyer         Buyer          @relation(fields: [userId], references: [id])
  wishlistItems WishlistItem[]

  @@map("wishlists")
}

model Order {
  id         Int         @id @default(autoincrement())
  totalPrice Int
  status     String
  userId     Int
  buyer      Buyer       @relation(fields: [userId], references: [id])
  orderItems OrderItem[]

  @@map("orders")
}

model ChatMessage {
  chatId    Int
  messageId Int

  chat    Chat    @relation(fields: [chatId], references: [id])
  message Message @relation(fields: [messageId], references: [id])

  @@id([chatId, messageId])
  @@map("chat_messages")
}

model BrandSeller {
  id                Int       @id @default(autoincrement())
  name              String
  countryOrigin     String
  referenceLocation String
  countryId         Int
  country           Country   @relation(fields: [countryId], references: [id])
  products          Product[]

  @@map("brand_sellers")
}

model MessageAttachment {
  id        Int     @id @default(autoincrement())
  blobUrl   String
  filename  String
  type      String
  messageId Int
  Message   Message @relation(fields: [messageId], references: [id])

  @@map("message_attachments")
}

model UserNotification {
  userId         Int
  notificationId Int
  Buyer          Buyer        @relation(fields: [userId], references: [id])
  Notification   Notification @relation(fields: [notificationId], references: [id])

  @@id([userId, notificationId])
  @@map("user_notifications")
}

model ChatParticipant {
  chatId Int
  userId Int
  Chat   Chat  @relation(fields: [chatId], references: [id])
  Buyer  Buyer @relation(fields: [userId], references: [id])

  @@id([chatId, userId])
  @@map("chat_participants")
}

model Product {
  id                 Int                 @id @default(autoincrement())
  name               String
  stock              Int
  price              Decimal
  dimensions         String?
  warranty           Boolean?
  discount           Int?
  peso               Decimal?
  formato            String?
  anhoEdicion        Int?
  numeroPaginas      Int?
  sellerId           Int
  brandSeller        BrandSeller         @relation(fields: [sellerId], references: [id])
  productAttachments ProductAttachment[]
  productTags        ProductTag[]
  productQuestions   ProductQuestion[]
  cartItems          CartItem[]
  wishlistItems      WishlistItem[]
  orderItems         OrderItem[]
  marketProducts     MarketProduct[]
  productRatings     ProductRating[]

  @@map("products")
}

model Tag {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  productTags ProductTag[]

  @@map("tags")
}

model ProductQuestion {
  id              Int             @id @default(autoincrement())
  text            String
  createdAt       DateTime
  productId       Int
  userId          Int
  product         Product         @relation(fields: [productId], references: [id])
  buyer           Buyer           @relation(fields: [userId], references: [id])
  questionReplies QuestionReply[]

  @@map("product_questions")
}

model CartItem {
  amount       Int
  addedAt      DateTime
  cartId       Int
  productId    Int
  ShoppingCart ShoppingCart @relation(fields: [cartId], references: [id])
  Product      Product      @relation(fields: [productId], references: [id])

  @@id([cartId, productId])
  @@map("cart_items")
}

model ProductTag {
  categoryId Int
  productId  Int
  tag        Tag     @relation(fields: [categoryId], references: [id])
  product    Product @relation(fields: [productId], references: [id])

  @@id([categoryId, productId])
  @@map("product_tags")
}

model WishlistItem {
  addedAt    DateTime
  wishlistId Int
  productId  Int

  wishlist Wishlist @relation(fields: [wishlistId], references: [id])
  product  Product  @relation(fields: [productId], references: [id])

  @@id([wishlistId, productId])
  @@map("wishlist_items")
}

model OrderItem {
  amount    Int
  orderId   Int
  productId Int
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@id([orderId, productId])
  @@map("order_items")
}

model ProductAttachment {
  imageUrl  String
  productId Int
  product   Product @relation(fields: [productId], references: [id])

  @@id([productId])
  @@map("product_attachments")
}

model MarketProduct {
  marketId  Int
  productId Int
  market    Market  @relation(fields: [marketId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@id([marketId, productId])
  @@map("market_products")
}

model QuestionReply {
  id              Int             @id @default(autoincrement())
  text            String
  createdAt       DateTime
  questionId      Int
  productQuestion ProductQuestion @relation(fields: [questionId], references: [id])

  @@map("question_replies")
}

model ProductRating {
  id                Int                @id @default(autoincrement())
  score             Int
  text              String
  createdAt         DateTime
  userId            Int
  productId         Int
  buyer             Buyer              @relation(fields: [userId], references: [id])
  product           Product            @relation(fields: [productId], references: [id])
  ratingAttachments RatingAttachment[]

  @@map("product_ratings")
}

model RatingAttachment {
  blobUrl       String
  filename      String
  type          String
  ratingId      Int
  productRating ProductRating @relation(fields: [ratingId], references: [id])

  @@id([ratingId])
  @@map("rating_attachments")
}
